﻿@using tda_proj.Model;
@using tda_proj.Service;
@inject IJSRuntime js;

<head>
    <link href="css/main-page.css" rel="stylesheet" />
</head>

<div class="location">
    <h2>Lokalita</h2>
    <div id="map"> </div>

    <p class="@(InfoTextShown ? "location_info-text location_info-text--visible" : "location_info-text")">@FilterMessage</p>

        <button id="filter_button" @onclick="GetAndSend">
            <i class="fa-solid fa-magnifying-glass"></i>
            Filtrovat
        </button>

</div>

@code {
    //passing data to parent
    [Parameter]
    public Action<List<string>> OnValueSent { get; set; }

    // getting data from js
    private List<string>? result;
    private DotNetObjectReference<Location>? objRef;

    private bool InfoTextShown = false;
    private string FilterMessage = "";

    [Parameter]
    public bool IsFilteringOn { get; set; }

    protected override void OnInitialized()
    {
        objRef = DotNetObjectReference.Create(this);
    }

    // gets data from js and sends them to filter.razor
    private async Task GetAndSend()
    {
        // get data from js (map.js)
        result = await js.InvokeAsync<List<string>>("filterCallback", objRef);
        ShowFilterMessage(result);

        // sends data to parent
        OnValueSent?.Invoke(result);
    }
    // showing
    private async Task ShowFilterMessage(List<string> locations)
    {
        if (!locations.Any() && IsFilteringOn == false)
        {
            FilterMessage = "Zadejte alespoň jeden filtrovací parametr!";
        }
        else if (locations.Any())
        {
            FilterMessage = "Filtr byl úspěšně přidán!";
        }
        else if (!locations.Any() && IsFilteringOn == true)
        {
            FilterMessage = "Filtr byl úspěšně odebrán!";
        }
        InfoTextShown = true;
        await Task.Delay(2000);
        InfoTextShown = false;

        StateHasChanged();
    }

    public void Dispose() => objRef?.Dispose();
}