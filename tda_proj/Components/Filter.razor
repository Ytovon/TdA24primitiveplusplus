@inject IJSRuntime js;
@using tda_proj.Model;
@using tda_proj.Service;

<div class="@(IsFilterShown ? "filter filter--open" : "filter")">
    <h2 class="filter_title"><i class="fa-solid fa-filter fa-xs"></i>Filtrace</h2>

    <div class="filter_main">
        <i class="fa-solid fa-xmark x-mark" @onclick="ShowFilter"></i>

        <tda_proj.Components.PriceRange />

        <tda_proj.Components.FilterTags allTags="allTags" />

        <tda_proj.Components.Location />

    </div>
</div>

<button class="@(IsFilterShown ? "filter_btn filter_btn--hidden" : "filter_btn")" @onclick="ShowFilter"><i class="fa-solid fa-filter fa-2xl"></i></button>

@code{
    //components variables
    private List<string> allLocations = new List<string>();
    private List<Tag> allTags = new List<Tag>();

    private List<Lector> allLectors = new List<Lector>();
    LectorService lectorService = new LectorService();

    // filter variable
    private bool IsFilterShown = false;


    private void ShowFilter()
    {
        IsFilterShown = !IsFilterShown;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            await js.InvokeVoidAsync("initMap", allLocations);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        allLectors = await lectorService.GetAllLectorsAsync();


        // getting all prices into prices list
        foreach (var lector in allLectors)
        {
            allLocations.Add(lector.location);
            allTags.AddRange(lector.lectorTags.Select(lt => lt.Tag).ToList());
        }

        // abecední řazení
        allTags = allTags.OrderBy(tag => tag.TagName).ToList();
    }
}