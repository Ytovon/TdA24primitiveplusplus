@using tda_proj.Model;
@using tda_proj.Service;
@inject IJSRuntime js;


@page "/lecturer/{id:guid}"
<head>
    <link href="css/Lecturer.css" rel="stylesheet"/>
</head>
<body>
    <div class="background_image">
        <main>
            <NavLink id="exit" href="/"><i class="fa-solid fa-house"></i></NavLink>
            <div class="vizitka">
                <h1 class="nadpis">

                    @foreach (var titleBefore in lector.titlesBefore)
                    {
                        @titleBefore.Title

                    }
                    <h1>
                        @lector.firstName
                        @lector.middleName
                        @lector.lastName
                    </h1>

                    @foreach (var titleAfter in lector.titlesAfter)
                    {

                        @titleAfter.Title

                    }
                </h1>

                <p class="podnadpis">
                    @for (int i = 0; i < lector.claims.Count; i++)
                    {
                        @if (i < lector.claims.Count - 1)
                        {
                        <p>@lector.claims[i].Name</p>
                        <p> /</p>
                        }
                        else
                        {
                        <p>@lector.claims[i].Name</p>
                        }
                    }
                </p>

                <img src="@lector.pictureUrl">

                <div class="kontakty">
                    <p><i class="fa-solid fa-location-dot fa-xl"></i>@lector.location</p>
                    <p>
                        <i class="fa-solid fa-phone fa-lg"></i>

                        @foreach (var telNumber in telNumbers)
                        {
                            @telNumber.TelNumber
                        }
                    </p>

                    <p class="contact_emails">
                        <i class="fa-solid fa-envelope fa-lg"></i>

                        <span class="emails">
                            @foreach (var email in emails)
                            {
                                <p>@email.Email</p>
                            }
                        </span>
                         
                    </p>

                    <p>Cena za hodinu: <i>@lector.pricePerHour</i>Kč</p>
                </div>

                <p class="text">@lector.bio</p>

                <div id="vizitka_tagy" class="tagy" @ref="tagsContainer">

                    <button class="predchozi_btn btn" onclick="scrollLeftSmooth()"><i class="fa-solid fa-chevron-left"></i></button>

                    @foreach (var tag in tags)
                    {
                        <p class="tag">@tag.TagName</p>

                    }

                    <button class="dalsi_btn btn" onclick="scrollRightSmooth()"><i class="fa-solid fa-chevron-right"></i></button>
                </div>
            </div>

        </main>
    </div>
 
</body>


@code {
    [Parameter]
    public Guid id { get; set; }
    private Lector lector { get; set; }
    LectorService lectorService = new LectorService();
    Contact contact;
    List<ContactEmail> emails;
    List<ContactTelNumber> telNumbers;
    private List<Tag> tags = new List<Tag>();

    private ElementReference tagsContainer;

    protected override void OnInitialized()
    {
        lector = lectorService.GetLectorByUUID(id);
        contact = lector.Contact;
        emails = contact.Emails.ToList();
        telNumbers = contact.TelNumbers.ToList();
        tags = lector.lectorTags.Select(lt => lt.Tag).ToList();
    }

    private async Task ScrollLeft()
    {
        await js.InvokeVoidAsync("scrollLeftSmooth", tagsContainer);
    }

    private async Task ScrollRight()
    {
        await js.InvokeVoidAsync("scrollRightSmooth", tagsContainer);
    }
}




    
   


       
